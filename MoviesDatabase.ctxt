#BlueJ class context
comment0.params=
comment0.target=MoviesDatabase()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ TestMovies\r\n
comment1.params=movies
comment1.target=void\ addMovie(java.util.ArrayList)
comment1.text=\r\n\ addMovie(ArrayList<Movie>\ movies)\r\n\ Add\ new\ movie\ to\ movies\ array\r\n\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n
comment10.params=movies
comment10.target=void\ displayMovie(java.util.ArrayList)
comment10.text=\r\n\ displayMovie(ArrayList<Movie>\ movies)\r\n\ Display\ the\ movies\ list\ from\ the\ array\r\n\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n
comment11.params=film
comment11.target=void\ displayOneFilm(Movie)
comment11.text=\r\n\ displayOneFilm(Movie\ film)\r\n\ Display\ movie\ from\ Movie\ object\r\n\ \r\n\ @param\ film\ -\ Movie\ object\ to\ be\ displayed\r\n
comment12.params=movies
comment12.target=void\ edit(java.util.ArrayList)
comment12.text=\r\n\ edit(ArrayList<Movie>\ movies)\r\n\ Modify\ movie\ detail\ that\ already\ in\ the\ array\ list\r\n\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n
comment13.params=filename\ movies
comment13.target=void\ exit(java.lang.String,\ java.util.ArrayList)
comment13.text=\r\n\ exit(String\ filename,\ ArrayList<Movie>\ movies)\r\n\ Exit\ the\ movie\ database\ system\r\n\ \r\n\ @param\ filename\ -\ the\ name\ of\ the\ file\ to\ be\ written\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n
comment14.params=filename\ movies
comment14.target=void\ exitAndSave(java.lang.String,\ java.util.ArrayList)
comment14.text=\r\n\ exitAndSave(String\ filename,\ ArrayList<Movie>\ movies)\r\n\ Exit\ the\ system\ and\ save\ the\ arraylist\ to\ the\ text\ file\r\n\ Overwrite\ the\ existing\ file\r\n\ \r\n\ @param\ filename\ -\ the\ name\ of\ the\ file\ to\ be\ written\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n
comment15.params=
comment15.target=void\ exitRegards()
comment15.text=\r\n\ exitRegards()\r\n\ Exit\ greeting\ display\ \r\n
comment16.params=
comment16.target=void\ exitWithoutSave()
comment16.text=\r\n\ exitWithoutSave()\r\n\ Exit\ the\ system\ without\ save\ the\ arraylist\ to\ the\ text\ file\r\n\ Leave\ the\ original\ file\ as\ it\ is\r\n
comment17.params=movies
comment17.target=java.lang.String\ getLastLine(java.util.ArrayList)
comment17.text=\r\n\ getLastLine(ArrayList<Movie>\ movies)\r\n\ store\ the\ last\ detail\ from\ movies\ arraylist\r\n\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n\ \r\n\ @return\ String\ -\ string\ last\ detail\ from\ movies\ arraylist\r\n
comment18.params=movies
comment18.target=java.lang.String\ getStoredMovieCollectionList(java.util.ArrayList)
comment18.text=\r\n\ getStoredMovieCollectionList(ArrayList<Movie>\ movies)\r\n\ store\ the\ movie\ details\ from\ the\ movies\ array\ except\ the\ last\ line\r\n\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n\ \r\n\ @return\ String\ -\ movies\ detail\ from\ movies\ arraylist\r\n
comment19.params=order
comment19.target=java.lang.String\ insertActor(int)
comment19.text=\r\n\ insertActor(int\ order)\r\n\ insert\ actor\ for\ the\ new\ movie\r\n\ \r\n\ @param\ order\ -\ int\ order\ for\ the\ input\ actor\r\n\ \r\n\ @return\ String\ -\ the\ actor\ name\ that\ had\ been\ validated\r\n
comment2.params=movies\ movieName\ directorName\ act1\ act2\ act3\ star
comment2.target=void\ addMovieToArray(java.util.ArrayList,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment2.text=\r\n\ addMovieToArray(ArrayList<Movie>\ movies,\ String\ movieName,\ String\ directorName,\ String\ act1,\ String\ act2,\ String\ act3,\ int\ star)\r\n\ adding\ a\ movie\ to\ movies\ array\ list\r\n\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n\ @param\ String\ movieName\ -\ title\ for\ movie\r\n\ @param\ String\ directorName\ -\ directer\ name\ of\ the\ movie\r\n\ @param\ String\ act1\ -\ first\ actor\ in\ the\ movie\ \r\n\ @param\ String\ act2\ -\ second\ actor\ in\ the\ movie\r\n\ @param\ String\ act3\ -\ third\ actor\ in\ the\ movie\ \r\n\ @param\ int\ star\ -\ rating\ for\ movie\ \r\n
comment20.params=
comment20.target=java.lang.String\ insertDirector()
comment20.text=\r\n\ insertDirector()\r\n\ insert\ the\ director\ name\ for\ the\ movie\r\n\ \r\n\ @return\ String\ -\ the\ name\ of\ director\ that\ had\ been\ validated\r\n
comment21.params=
comment21.target=int\ insertEditMenuAnswer()
comment21.text=\r\n\ insertEditMenuAnswer()\r\n\ insert\ the\ answer\ for\ choosen\ edit\ options\ and\ validate\ it\r\n\ \r\n\ @return\ int\ -\ the\ answer\ number\r\n
comment22.params=
comment22.target=int\ insertExitMenuAnswer()
comment22.text=\r\n\ insertExitMenuAnswer()\r\n\ insert\ the\ answer\ for\ choosen\ exit\ options\ and\ validate\ it\r\n\ \r\n\ @return\ int\ -\ the\ answer\ number\r\n
comment23.params=result\ mode
comment23.target=int\ insertNumberOption(java.util.ArrayList,\ java.lang.String)
comment23.text=\r\n\ insertNumberOption(ArrayList<Movie>\ result,\ String\ mode)\r\n\ insert\ the\ choosen\ movie\ number\ from\ the\ movies\ display\ and\ validate\ it\r\n\ \r\n\ @param\ ArrayList<Movie>\ result\ -\ ArrayList\ movie\ type\ \r\n\ @param\ String\ mode\ -\ the\ mode\ we\ want\ to\ do\ with\ movies\ list\r\n\ \r\n\ @return\ int\ -\ the\ answer\ number\r\n
comment24.params=
comment24.target=int\ insertRating()
comment24.text=\r\n\ insertRating()\r\n\ insert\ rating\ by\ the\ user\ and\ validate\ it\r\n\ \r\n\ @return\ int\ for\ the\ movies'\ rating\r\n
comment25.params=
comment25.target=int\ insertSearchMenuAnswer()
comment25.text=\r\n\ insertSearchMenuAnswer()\r\n\ insert\ the\ choosen\ answer\ from\ the\ search\ menu\ options\ and\ validate\ it\r\n\ \r\n\ @return\ int\ for\ the\ search\ menu\ options\ answer\r\n
comment26.params=
comment26.target=java.lang.String\ insertTitle()
comment26.text=\r\n\ insertTitle()\r\n\ Insert\ the\ title\ for\ the\ movie\ and\ validate\ it\r\n\ \r\n\ @return\ String\ -\ the\ title\ for\ the\ movie\r\n
comment27.params=movies\ head
comment27.target=void\ removeFilm(java.util.ArrayList,\ java.lang.String)
comment27.text=\r\n\ removeFilm(ArrayList<Movie>\ movies,\ String\ head)\r\n\ remove\ the\ film\ from\ the\ arraylist\ by\ its\ match\ title\ input\r\n\ \r\n\ @param\ ArrayList<Movie>\ result\ -\ ArrayList\ movie\ type\ \r\n\ @String\ head\ -\ movies\ title\r\n
comment28.params=
comment28.target=void\ runDatabase()
comment28.text=\r\n\ runDatabase()\r\n\ Main\ method\ where\ user\ interface\ with\ movie\ database\ system\r\n
comment29.params=movies
comment29.target=void\ searchedByDirectors(java.util.ArrayList)
comment29.text=\r\n\ searchedByDirectors(ArrayList<Movie>\ movies)\r\n\ Search\ method\ that\ searched\ movie\ by\ its\ director\r\n\ \r\n\ @param\ ArrayList<Movie>\ result\ -\ ArrayList\ movie\ type\ \r\n
comment3.params=movies\ title
comment3.target=java.util.ArrayList\ checkExistence(java.util.ArrayList,\ java.lang.String)
comment3.text=\r\n\ checkExistence(ArrayList<Movie>\ movies,\ String\ title)\r\n\ Checking\ existance\ for\ title\ input\ by\ user\ in\ original\ movies\ list\r\n\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n\ @param\ String\ title\ -\ title\ for\ movie\r\n\ \r\n\ @return\ ArrayList<Movie>\ movies\ -\ checked\ ArrayList\ movie\r\n
comment30.params=movies
comment30.target=void\ searchedByTitle(java.util.ArrayList)
comment30.text=\r\n\ searchedByTitle(ArrayList<Movie>\ movies)\r\n\ Search\ method\ that\ searched\ movie\ by\ its\ title\r\n\ \r\n\ @param\ ArrayList<Movie>\ result\ -\ ArrayList\ movie\ type\ \r\n
comment31.params=movies
comment31.target=void\ searchMovie(java.util.ArrayList)
comment31.text=\r\n\ searchMovie(ArrayList<Movie>\ movies)\r\n\ searchMovie\ based\ on\ title\ and\ the\ directors\r\n\ \r\n\ @param\ ArrayList<Movie>\ result\ -\ ArrayList\ movie\ type\ \r\n
comment32.params=movieDetails\ movies
comment32.target=void\ storeFilesToCollection(java.lang.String,\ java.util.ArrayList)
comment32.text=\r\n\ storeFilesToCollection(String\ movieDetails,\ ArrayList<Movie>\ movies)\ \r\n\ storing\ movies\ detail\ to\ the\ movies\ array\r\n\ \r\n\ @param\ String\ movieDetails\ -\ String\ that\ consist\ the\ movies\ detail\r\n\ @param\ ArrayList<Movie>\ movies\ -\ the\ array\ where\ the\ movie\ object\ is\ save\ and\ created\ from\ the\ movieDetails\ string\r\n
comment4.params=movies\ title
comment4.target=boolean\ checkMovieRedundancyByTitle(java.util.ArrayList,\ java.lang.String)
comment4.text=\r\n\ checkMovieRedundancyByTitle(ArrayList<Movie>\ movies,\ String\ title)\r\n\ Check\ if\ the\ title\ that\ the\ user\ input\ is\ already\ in\ existing\ movie\ arraylist\ \r\n\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n\ @param\ String\ title\ -\ title\ for\ movie\r\n\ \r\n\ return\ true\ -\ if\ input\ title\ is\ already\ exist\r\n\ return\ false\ -\ if\ the\ input\ title\ is\ not\ in\ arraylist\r\n
comment5.params=movieName\ directorName\ act1\ act2\ act3\ star
comment5.target=Movie\ createNewMovie(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment5.text=\r\n\ createNewMovie(String\ movieName,\ String\ directorName,\ String\ act1,\ String\ act2,\ String\ act3,\ int\ star)\r\n\ create\ new\ object\ movie\r\n\ \r\n\ @param\ String\ movieName\ -\ title\ for\ movie\r\n\ @param\ String\ directorName\ -\ directer\ name\ of\ the\ movie\r\n\ @param\ String\ act1\ -\ first\ actor\ in\ the\ movie\ \r\n\ @param\ String\ act2\ -\ second\ actor\ in\ the\ movie\r\n\ @param\ String\ act3\ -\ third\ actor\ in\ the\ movie\ \r\n\ @param\ int\ star\ -\ rating\ for\ movie\ \r\n\ \r\n\ @return\ Movie\ -\ object\ movie\r\n
comment6.params=movies
comment6.target=void\ deleteMovie(java.util.ArrayList)
comment6.text=\r\n\ deleteMovie(ArrayList<Movie>\ movies)\r\n\ Show\ delete\ option\ for\ the\ user\r\n\ User\ input\ the\ movies'\ title\ that\ want\ to\ be\ deleted\ \r\n\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n
comment7.params=result\ title
comment7.target=boolean\ displayExistanceResult(java.util.ArrayList,\ java.lang.String)
comment7.text=\r\n\ displayExistanceResult(ArrayList<Movie>\ result,\ String\ title)\r\n\ Show\ movies\ that\ already\ checked\ the\ existancies\ in\ the\ movie\ arraylist\r\n\ \r\n\ @param\ ArrayList<Movie>\ result\ -\ ArrayList\ movie\ type\ \r\n\ @String\ title\ -\ title\ for\ movie\r\n\ \r\n\ @return\ true\ if\ the\ movie\ existed\r\n\ @return\ false\ if\ the\ movie\ is\ not\ in\ arraylist\r\n
comment8.params=result
comment8.target=void\ displayExistanceResultByDir(java.util.ArrayList)
comment8.text=\r\n\ displayExistanceResultByDir(ArrayList<Movie>\ result)\r\n\ Show\ movies\ that\ already\ checked\ the\ existancies\ search\ by\ the\ director\ in\ the\ movie\ arraylist\r\n\ \r\n\ @param\ ArrayList<Movie>\ result\ -\ ArrayList\ movie\ type\ \r\n
comment9.params=movies
comment9.target=void\ displayFavourite(java.util.ArrayList)
comment9.text=\r\n\ displayFavourite(ArrayList<Movie>\ movies)\r\n\ Show\ movies\ sort\ by\ the\ input\ rating\ by\ the\ user\r\n\ \r\n\ @param\ ArrayList<Movie>\ movies\ -\ ArrayList\ movie\ type\ \r\n
numComments=33
